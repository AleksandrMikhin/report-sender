plugins {
    id 'java'
    id "org.springframework.boot" version "$springBootVersion"
    id "io.spring.dependency-management" version "$springDependencyManagementVersion"
    id "com.avast.gradle.docker-compose" version "$dockerComposePluginVersion"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"

    implementation "jakarta.xml.soap:jakarta.xml.soap-api:$jakartaSoapVersion"
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:$jakartaBindingVersion"
    implementation "jakarta.activation:jakarta.activation-api:$jakartaActivationVersion"

    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    implementation "com.itextpdf:itextpdf:$itextPdfVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

bootJar {
    archiveName 'sender.jar'
}

dockerCompose {
    useComposeFiles = ["docker/docker-compose.yaml"]
    startedServices = ['report-sender']
    projectName = 'report-sender'
}

composeUp.dependsOn(clean, bootJar.mustRunAfter(clean))
